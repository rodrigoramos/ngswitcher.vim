Describe ngswitcher#switch(toFileFunc)
  Context with ngswitcher#toTS
    It switches to ts file
      execute 'e ' . Path('test/fixture/app.component.html')
      call ngswitcher#switch(function('ngswitcher#toTS'))
      Assert Equals(expand('%'), Path('test/fixture/app.component.ts'))
    End

    It does nothing when switching from non-Angular files
      execute 'e ' . Path('test/fixture/app.component.json')
      call ngswitcher#switch(function('ngswitcher#toTS'))
      Assert Equals(expand('%'), Path('test/fixture/app.component.json'))
    End
  End

  After
    call ngswitcher#clearHistory()
  End
End

Describe ngswitcher#toTS(component)
  Before
    let componentFactory = ngswitcher#core#getComponentFactory()
    let targetFiles = [
    \ './foo.component.html',
    \ './foo.component.css',
    \ './foo.component.ts',
    \ './foo.component.spec.ts'
    \ ]
  End

  Context the currentFile is not a ts file
    It returns a ts file path
      let notTS = './foo.component.html'
      let component = componentFactory.create(notTS, targetFiles)
      let nextPath = ngswitcher#toTS(component)
      Assert Equals(nextPath, './foo.component.ts')
    End

    It throws an error when the target ts file does not exist
      let notTS = './foo.html'
      let component = componentFactory.create(notTS, [notTS])
      Throws ngswitcher#toTS(component)
    End
  End

  Context the currentFile is a ts file
    Context if a previous file does not exist
      It returns html file path if exists (1)
        let ts = './foo.component.ts'
        let component = componentFactory.create(ts, targetFiles)
        let nextPath = ngswitcher#toTS(component)
        Assert Equals(nextPath, './foo.component.html')
      End

      It returns spec file path if exists (2)
        let ts = './foo.service.ts'
        let spec = './foo.service.spec.ts'
        let component = componentFactory.create(ts, [ts, spec])
        let nextPath = ngswitcher#toTS(component)
        Assert Equals(nextPath, './foo.service.spec.ts')
      End

      It returns the currentFile path as is (3)
        let ts = './foo.ts'
        let component = componentFactory.create(ts, [ts])
        let nextPath = ngswitcher#toTS(component)
        Assert Equals(nextPath, './foo.ts')
      End
    End
  End
End

Describe ngswitcher#toCSS(component)
  Before
    let componentFactory = ngswitcher#core#getComponentFactory()
    let targetFiles = [
    \ './foo.component.html',
    \ './foo.component.css',
    \ './foo.component.ts',
    \ './foo.component.spec.ts'
    \ ]
  End

  Context the currentFile is not a css file
    It returns a css file path
      let notCSS = './foo.component.html'
      let component = componentFactory.create(notCSS, targetFiles)
      let nextPath = ngswitcher#toCSS(component)
      Assert Equals(nextPath, './foo.component.css')
    End

    It throws an error when the target css file does not exist
      let notCSS = './foo.html'
      let component = componentFactory.create(notCSS, [notCSS])
      Throws ngswitcher#toCSS(component)
    End
  End

  Context the currentFile is a css file
    Context if a previous file does not exist
      It returns html file path if exists (1)
        let css = './foo.component.css'
        let component = componentFactory.create(css, targetFiles)
        let nextPath = ngswitcher#toCSS(component)
        Assert Equals(nextPath, './foo.component.html')
      End

      It returns the currentFile path as is (2)
        let css = './foo.css'
        let component = componentFactory.create(css, [css])
        let nextPath = ngswitcher#toCSS(component)
        Assert Equals(nextPath, './foo.css')
      End
    End
  End
End

Describe ngswitcher#toHTML(component)
  Before
    let componentFactory = ngswitcher#core#getComponentFactory()
    let targetFiles = [
    \ './foo.component.html',
    \ './foo.component.css',
    \ './foo.component.ts',
    \ './foo.component.spec.ts'
    \ ]
  End

  Context the currentFile is not a html file
    It returns a html file path
      let notHTML = './foo.component.css'
      let component = componentFactory.create(notHTML, targetFiles)
      let nextPath = ngswitcher#toHTML(component)
      Assert Equals(nextPath, './foo.component.html')
    End

    It throws an error when the target html file does not exist
      let notHTML = './foo.css'
      let component = componentFactory.create(notHTML, [notHTML])
      Throws ngswitcher#toHTML(component)
    End
  End

  Context the currentFile is a html file
    Context if a previous file does not exist
      It returns ts file path if exists (1)
        let html = './foo.component.html'
        let component = componentFactory.create(html, targetFiles)
        let nextPath = ngswitcher#toHTML(component)
        Assert Equals(nextPath, './foo.component.ts')
      End

      It returns the currentFile path as is (2)
        let html = './foo.html'
        let component = componentFactory.create(html, [html])
        let nextPath = ngswitcher#toHTML(component)
        Assert Equals(nextPath, './foo.html')
      End
    End
  End
End

Describe ngswitcher#toSpec(component)
  Before
    let componentFactory = ngswitcher#core#getComponentFactory()
    let targetFiles = [
    \ './foo.component.html',
    \ './foo.component.css',
    \ './foo.component.ts',
    \ './foo.component.spec.ts'
    \ ]
  End

  Context the currentFile is not a spec file
    It returns a spec file path
      let notSpec = './foo.component.html'
      let component = componentFactory.create(notSpec, targetFiles)
      let nextPath = ngswitcher#toSpec(component)
      Assert Equals(nextPath, './foo.component.spec.ts')
    End

    It throws an error when the target spec file does not exist
      let notSpec = './foo.css'
      let component = componentFactory.create(notSpec, [notSpec])
      Throws ngswitcher#toSpec(component)
    End
  End

  Context the currentFile is a spec file
    Context if a previous file does not exist
      It returns ts file path if exists (1)
        let spec = './foo.component.spec.ts'
        let component = componentFactory.create(spec, targetFiles)
        let nextPath = ngswitcher#toSpec(component)
        Assert Equals(nextPath, './foo.component.ts')
      End

      It returns the currentFile path as is (2)
        let spec = './foo.spec.ts'
        let component = componentFactory.create(spec, [spec])
        let nextPath = ngswitcher#toSpec(component)
        Assert Equals(nextPath, './foo.spec.ts')
      End
    End
  End
End
